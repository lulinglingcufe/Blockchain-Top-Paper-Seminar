各位同学好，今天我要讲的是数据库A类会议 SIGMOD 2017
上的论文BLOCKBENCH: A Framework for Analyzing Private Blockchains
文章提出了一种针对私有区块链的评测框架BLOCKBENCH。

首先介绍一下区块链的背景知识，这里我们主要关注私有链。

然后介绍blockbench框架的设计动机和实现面临的挑战。

接下来对比了在三大区块链平台：hyperLedger fabric、以太坊和parity上的性能测试实验结果。

最后讨论测试发现的一些问题。做出结论。

比特币可以说是21世纪的淘金热。它是一个点对点的虚拟货币系统，2009年由中本聪提出。最大的特点是没有货币发行者。
具有匿名性和分布式特点。

从技术的角度来说，区块链是其底层技术。它实际上是一个分布式共享账本，
意味着在每个参与者那里都有一个账本的副本。
使用了加密算法、共识协议和智能合约。

区块链的4要素：分布式账本、密码算法、共识与智能合约。

下面对这4个要素进行一个简单的介绍。

首先讲一下分布式公共账本的概念。

分布式公共账本 由一系列数据节点组成。

这些节点nodes 将交易打包成块。

随着时间的推移，这些块将串成一个链，所以就叫区块链。
每个节点都有当前账本的一份副本。所以任何一个节点的失效都不会造成整个系统数据丢失。

比特币肯定也是一个分布式公共账本啦。
这张图显示了在全球的比特币节点的分布情况。

密码算法可以保证账本数据的完整性。
关键技术是用哈希指针将块前后链接起来。区块里包含前一个区块的哈希，所以如果篡改区块内容
，后面一系列区块的哈希都会跟着改变。这很容易检测，因此区块链数据是具有不可篡改性。
也因此一个用户是没有办法把一个币花两遍的。

共识协议主要是确保系统中所有的节点能够对区块链上区块的内容达成一致。
就是说所有节点要维护一个公共的账本。
有许多不同的共识协议，它们在协议的性能和共识节点数量之间有一个取舍。

智能合约是可以附加在区块交易上的逻辑。它是储存在区块链中的用户自定义的合约协议。

因为我们这个是针对私有链的评测框架。

所以下面介绍一下公链和私链的区别。
公链的话，节点是可以自由选择加入或离开的。比特币就是一个例子。
对于私链，节点的身份需要经过验证。现在对于私链、联盟链的研究非常热门，因为实际企业应用场景下，
如果认证了节点身份，就可以采用更高效的共识算法。

下面说一下这个测试框架设计的动机。

为了了解私有链的性能，需要设计一个通用的测试框架，来看看现有的区块链平台
能在何种程度上处理数据进行一个处理。

该框架可以帮助应用的开发者根据需求选择区块链平台。   
它还可以帮助区块链平台 识别潜在的性能瓶颈。

现在有很多针对数据库的测试负载。但还没有针对私有链的测试，所以这是本文的创新。
现在介绍BLOCKBENCH的技术细节。

面临的第一个挑战是，区块链系统由很多部分组成。不同的平台对于每个部分的设计选择也不一样。
因此文章将区块链设计抽象出三个层次——共识层，执行层和数据模型层。结合区块链的工作栈来看。
共识层包括工作量证明、pbft等协议。执行层是智能合约的执行引擎，以太坊是用EVM虚拟机，fabric用docker容器。
数据模型层，以太坊用的是leveldb，fabric用的是rockdb，存储世界状态、账户信息等等。

第二个挑战是平台的选择。现有的区块链底层平台非常多，仅仅比特币就有超过200个变种。
本文选取了现在有着相对成熟的设计实现和用户群基础的
hyperLedger fabric、以太坊和parity来进行测试。该框架也是通用的，后续可以测试其他区块链平台。

第三个挑战是在区块链平台上缺少面向数据库的工作负载。

本文将区块链看做一个键值对存储。
它采用引擎通过智能合约来实现交易和分析功能。
在该框架中设计并测试了交易分析的工作负载。

主要设计了两种工作负载——宏观工作负载和微观工作负载。

这是一个整体设计图。宏观工作负载，将区块链作为一个黑盒，测试它整体性能。

对于每个层次——执行层、数据模型和共识层
都设计了至少一个微观测试工作负载 来压力测试它。
执行层有CPUHeavy。数据模型层有IOHeavy和对历史数据的进行分析的Analytics负载。
共识层提供的负载就只是发起交易，而不做其他事。

该表是现在设计的工作负载。包括了智能合约的名称和相应的解释。

下面这张图是blockbench的软件栈。它是一个灵活、可扩展的框架。
通过 iblockchainconnector 接口 将三个平台链接到后端。 
通过 iWorkloadConnector 接口将工作负载部署于客户端
通过异步驱动，执行工作负载得到分析数据。

主要有5个评测指标。  
交易吞吐量是每秒成功的交易数量。
交易延迟就是每笔交易的响应时间。
这里的可扩展性，用增加节点数量、并发工作负载时，交易吞吐量和延迟的变化来衡量。
容错性用节点失效时，交易吞吐量和延迟的变化来衡量。

安全性指标
利用BGP攻击，在一段时间内分割节点群。导致区块链的分叉。
主链上产生的块和用户确认块数之比，可以用来衡量安全性。
主链上产生的块越多，双花攻击、自私挖矿发生的概率就越低。

接下来介绍实验。在底层平台hyperLedger就是超级账本、以太坊和parity上部署该测试。
在48节点的集群上进行了实验。32G内存，2TB硬盘。

下面先讲一下测试的主要发现：
第一个
hyperLedger在所有测试上的表现比以太坊和parity都要好，但是节点多于16个，就无法形成共识。

以太坊和parity在节点失效时恢复能力更好，但是容易遭受分叉攻击。

hyperLedger和以太坊的主要性能瓶颈在于共识协议。但是parity的性能瓶颈在于交易签名。

以太坊和parity的内存、磁盘消耗更大。其执行引擎也不如hyperLedger的高效。

Hyperledger的数据模型是比较简单的，但是它的灵活性使得
自定义最优区块链数据分析型查询成为可能。

下面通过几张图来进行详细分析。

这张图是三个系统运行 YCSB 和 smallbank 工作负载时 它的交易吞吐量和交易延迟的比较图。

对于Hyperledger和以太坊来说，运行smallbank工作负载时它的吞吐量会下降10%。
交易延迟会增加20%。因为smallbank的智能合约对区块链的状态有更多的读写操作。
所以结果表明，区块链执行层的成本还是非常高的。

parity的交易执行速度比较恒定。因为它强制客户端每秒最多发起80个请求。
因此parity的交易吞吐量和交易延迟都是最小的。

该图是三个系统的CPU和网络效用。
粉色的以太坊是CPU计算密集型，因为它使用的共识协议是工作量证明PoW。

下面这个蓝色的是Hyperledger。它是通信密集型，因为它使用的共识协议是PBFT。
共识协议的不同是这两个平台性能差距的主要原因。

这张图可以说明节点的可扩展性scalability。
因为它比较了客户端和sever端数量相同时，增加节点数量的情况下，交易吞吐量和延迟变化的情况。

可以看到绿色的线。
parity的性能几乎不变，因为它限制了客户端的请求速度。

粉色的以太坊。
在大于8个节点后，性能几乎是线性下降的。

蓝色的Hyperledger。
而由于共识算法的缘故，在16个节点之后就停止工作。

下面这张图说明了节点容错性和安全性的实验结果。

在100秒的时候使得区块链网络被分割成原先的一半。
分割持续了150秒，在250秒结束。
X-total表示区块链X产生的总块数。
X-bc  表示区块链X中达成共识的块的数量。bc是block that reach consensus就是达成共识。

可以看到parity和以太坊在分割网络的情况下，容易出现区块链分叉的情况。
Hyperledger由于pbft共识算法的缘故，所有产生的块都需要达成共识，在分割的情况下，就不产生块了。
在分割结束后，它需要更长的时间执行同步协议，来恢复系统。

这张图是CPUheavy工作负载的执行情况。
parity和以太坊在执行层用的都是EVM虚拟机。但是parity有做优化，所以它的虚拟机执行效率更高。
Hyperledger使用docker来编译运行智能合约，所以它的执行层在执行速度和内存使用方面都更加高效。
三个系统都不能使用多核架构，因为执行智能合约只需要单核。

做完这些实验之后，对现在区块链平台存在的问题进行讨论。
和现有的交易型数据库Hstore相比，区块链平台在性能方面可以看到是远远比不上的。
本文建议将区块链系统中的存储、执行引擎、共识都独立出来进行优化。

利用一些新的硬件特性来改进共识协议。
以太坊和parity可以利用多核架构，来提高执行速度。

最后做一个结论，blockbench是第一个针对私链的测试框架。
希望能为后续区块链开发提供一个基准参考。
整个测试工具也已经开源在GitHub上面了。